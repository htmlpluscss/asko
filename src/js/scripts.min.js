// AnimateScroll.min.js
// Sunmock Yang Nov. 2015
function animateScroll(t,n,i,e,a,r){e=e?e:0;var o=document.documentElement,s=o.clientHeight,u="scrollMaxY"in window?window.scrollMaxY:o.scrollHeight-s,c=window.pageYOffset,l=c,h=isNaN(t)?t.getBoundingClientRect():0;"center"===a?(l+=isNaN(t)?h.top+h.height/2:t,l-=s/2,l-=e):"bottom"===a?(l+=h.bottom||t,l-=s,l+=e):(l+=h.top||t,l-=e),l=Math.max(Math.min(u,l),0);var d=l-c,f={targetY:l,deltaY:d,duration:n?n:0,easing:i in animateScroll.Easing?animateScroll.Easing[i]:animateScroll.Easing.linear,onFinish:r,startTime:Date.now(),lastY:c,step:animateScroll.step};window.requestAnimationFrame(f.step.bind(f))}animateScroll.Easing={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return t*(2-t)},easeInOutQuad:function(t){return.5>t?2*t*t:-1+(4-2*t)*t},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return--t*t*t+1},easeInOutCubic:function(t){return.5>t?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return 1- --t*t*t*t},easeInOutQuart:function(t){return.5>t?8*t*t*t*t:1-8*--t*t*t*t},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return 1+--t*t*t*t*t},easeInOutQuint:function(t){return.5>t?16*t*t*t*t*t:1+16*--t*t*t*t*t}},animateScroll.step=function(){if(this.lastY!==window.pageYOffset&&this.onFinish)return void this.onFinish();var t=Math.min((Date.now()-this.startTime)/this.duration,1),n=this.targetY-(1-this.easing(t))*this.deltaY;window.scrollTo(window.scrollX,n),1!==t?(this.lastY=window.pageYOffset,window.requestAnimationFrame(this.step.bind(this))):this.onFinish&&this.onFinish()};


(function(window,document){'use strict';if('IntersectionObserver'in window&&'IntersectionObserverEntry'in window&&'intersectionRatio'in window.IntersectionObserverEntry.prototype){if(!('isIntersecting'in window.IntersectionObserverEntry.prototype)){Object.defineProperty(window.IntersectionObserverEntry.prototype,'isIntersecting',{get:function(){return this.intersectionRatio>0;}});}
return;}
var registry=[];function IntersectionObserverEntry(entry){this.time=entry.time;this.target=entry.target;this.rootBounds=entry.rootBounds;this.boundingClientRect=entry.boundingClientRect;this.intersectionRect=entry.intersectionRect||getEmptyRect();this.isIntersecting=!!entry.intersectionRect;var targetRect=this.boundingClientRect;var targetArea=targetRect.width*targetRect.height;var intersectionRect=this.intersectionRect;var intersectionArea=intersectionRect.width*intersectionRect.height;if(targetArea){this.intersectionRatio=Number((intersectionArea/targetArea).toFixed(4));}else{this.intersectionRatio=this.isIntersecting?1:0;}}
function IntersectionObserver(callback,opt_options){var options=opt_options||{};if(typeof callback!='function'){throw new Error('callback must be a function');}
if(options.root&&options.root.nodeType!=1){throw new Error('root must be an Element');}
this._checkForIntersections=throttle(this._checkForIntersections.bind(this),this.THROTTLE_TIMEOUT);this._callback=callback;this._observationTargets=[];this._queuedEntries=[];this._rootMarginValues=this._parseRootMargin(options.rootMargin);this.thresholds=this._initThresholds(options.threshold);this.root=options.root||null;this.rootMargin=this._rootMarginValues.map(function(margin){return margin.value+margin.unit;}).join(' ');}
IntersectionObserver.prototype.THROTTLE_TIMEOUT=100;IntersectionObserver.prototype.POLL_INTERVAL=null;IntersectionObserver.prototype.USE_MUTATION_OBSERVER=true;IntersectionObserver.prototype.observe=function(target){var isTargetAlreadyObserved=this._observationTargets.some(function(item){return item.element==target;});if(isTargetAlreadyObserved){return;}
if(!(target&&target.nodeType==1)){throw new Error('target must be an Element');}
this._registerInstance();this._observationTargets.push({element:target,entry:null});this._monitorIntersections();this._checkForIntersections();};IntersectionObserver.prototype.unobserve=function(target){this._observationTargets=this._observationTargets.filter(function(item){return item.element!=target;});if(!this._observationTargets.length){this._unmonitorIntersections();this._unregisterInstance();}};IntersectionObserver.prototype.disconnect=function(){this._observationTargets=[];this._unmonitorIntersections();this._unregisterInstance();};IntersectionObserver.prototype.takeRecords=function(){var records=this._queuedEntries.slice();this._queuedEntries=[];return records;};IntersectionObserver.prototype._initThresholds=function(opt_threshold){var threshold=opt_threshold||[0];if(!Array.isArray(threshold))threshold=[threshold];return threshold.sort().filter(function(t,i,a){if(typeof t!='number'||isNaN(t)||t<0||t>1){throw new Error('threshold must be a number between 0 and 1 inclusively');}
return t!==a[i-1];});};IntersectionObserver.prototype._parseRootMargin=function(opt_rootMargin){var marginString=opt_rootMargin||'0px';var margins=marginString.split(/\s+/).map(function(margin){var parts=/^(-?\d*\.?\d+)(px|%)$/.exec(margin);if(!parts){throw new Error('rootMargin must be specified in pixels or percent');}
return{value:parseFloat(parts[1]),unit:parts[2]};});margins[1]=margins[1]||margins[0];margins[2]=margins[2]||margins[0];margins[3]=margins[3]||margins[1];return margins;};IntersectionObserver.prototype._monitorIntersections=function(){if(!this._monitoringIntersections){this._monitoringIntersections=true;if(this.POLL_INTERVAL){this._monitoringInterval=setInterval(this._checkForIntersections,this.POLL_INTERVAL);}
else{addEvent(window,'resize',this._checkForIntersections,true);addEvent(document,'scroll',this._checkForIntersections,true);if(this.USE_MUTATION_OBSERVER&&'MutationObserver'in window){this._domObserver=new MutationObserver(this._checkForIntersections);this._domObserver.observe(document,{attributes:true,childList:true,characterData:true,subtree:true});}}}};IntersectionObserver.prototype._unmonitorIntersections=function(){if(this._monitoringIntersections){this._monitoringIntersections=false;clearInterval(this._monitoringInterval);this._monitoringInterval=null;removeEvent(window,'resize',this._checkForIntersections,true);removeEvent(document,'scroll',this._checkForIntersections,true);if(this._domObserver){this._domObserver.disconnect();this._domObserver=null;}}};IntersectionObserver.prototype._checkForIntersections=function(){var rootIsInDom=this._rootIsInDom();var rootRect=rootIsInDom?this._getRootRect():getEmptyRect();this._observationTargets.forEach(function(item){var target=item.element;var targetRect=getBoundingClientRect(target);var rootContainsTarget=this._rootContainsTarget(target);var oldEntry=item.entry;var intersectionRect=rootIsInDom&&rootContainsTarget&&this._computeTargetAndRootIntersection(target,rootRect);var newEntry=item.entry=new IntersectionObserverEntry({time:now(),target:target,boundingClientRect:targetRect,rootBounds:rootRect,intersectionRect:intersectionRect});if(!oldEntry){this._queuedEntries.push(newEntry);}else if(rootIsInDom&&rootContainsTarget){if(this._hasCrossedThreshold(oldEntry,newEntry)){this._queuedEntries.push(newEntry);}}else{if(oldEntry&&oldEntry.isIntersecting){this._queuedEntries.push(newEntry);}}},this);if(this._queuedEntries.length){this._callback(this.takeRecords(),this);}};IntersectionObserver.prototype._computeTargetAndRootIntersection=function(target,rootRect){if(window.getComputedStyle(target).display=='none')return;var targetRect=getBoundingClientRect(target);var intersectionRect=targetRect;var parent=getParentNode(target);var atRoot=false;while(!atRoot){var parentRect=null;var parentComputedStyle=parent.nodeType==1?window.getComputedStyle(parent):{};if(parentComputedStyle.display=='none')return;if(parent==this.root||parent==document){atRoot=true;parentRect=rootRect;}else{if(parent!=document.body&&parent!=document.documentElement&&parentComputedStyle.overflow!='visible'){parentRect=getBoundingClientRect(parent);}}
if(parentRect){intersectionRect=computeRectIntersection(parentRect,intersectionRect);if(!intersectionRect)break;}
parent=getParentNode(parent);}
return intersectionRect;};IntersectionObserver.prototype._getRootRect=function(){var rootRect;if(this.root){rootRect=getBoundingClientRect(this.root);}else{var html=document.documentElement;var body=document.body;rootRect={top:0,left:0,right:html.clientWidth||body.clientWidth,width:html.clientWidth||body.clientWidth,bottom:html.clientHeight||body.clientHeight,height:html.clientHeight||body.clientHeight};}
return this._expandRectByRootMargin(rootRect);};IntersectionObserver.prototype._expandRectByRootMargin=function(rect){var margins=this._rootMarginValues.map(function(margin,i){return margin.unit=='px'?margin.value:margin.value*(i%2?rect.width:rect.height)/100;});var newRect={top:rect.top-margins[0],right:rect.right+margins[1],bottom:rect.bottom+margins[2],left:rect.left-margins[3]};newRect.width=newRect.right-newRect.left;newRect.height=newRect.bottom-newRect.top;return newRect;};IntersectionObserver.prototype._hasCrossedThreshold=function(oldEntry,newEntry){var oldRatio=oldEntry&&oldEntry.isIntersecting?oldEntry.intersectionRatio||0:-1;var newRatio=newEntry.isIntersecting?newEntry.intersectionRatio||0:-1;if(oldRatio===newRatio)return;for(var i=0;i<this.thresholds.length;i++){var threshold=this.thresholds[i];if(threshold==oldRatio||threshold==newRatio||threshold<oldRatio!==threshold<newRatio){return true;}}};IntersectionObserver.prototype._rootIsInDom=function(){return!this.root||containsDeep(document,this.root);};IntersectionObserver.prototype._rootContainsTarget=function(target){return containsDeep(this.root||document,target);};IntersectionObserver.prototype._registerInstance=function(){if(registry.indexOf(this)<0){registry.push(this);}};IntersectionObserver.prototype._unregisterInstance=function(){var index=registry.indexOf(this);if(index!=-1)registry.splice(index,1);};function now(){return window.performance&&performance.now&&performance.now();}
function throttle(fn,timeout){var timer=null;return function(){if(!timer){timer=setTimeout(function(){fn();timer=null;},timeout);}};}
function addEvent(node,event,fn,opt_useCapture){if(typeof node.addEventListener=='function'){node.addEventListener(event,fn,opt_useCapture||false);}
else if(typeof node.attachEvent=='function'){node.attachEvent('on'+event,fn);}}
function removeEvent(node,event,fn,opt_useCapture){if(typeof node.removeEventListener=='function'){node.removeEventListener(event,fn,opt_useCapture||false);}
else if(typeof node.detatchEvent=='function'){node.detatchEvent('on'+event,fn);}}
function computeRectIntersection(rect1,rect2){var top=Math.max(rect1.top,rect2.top);var bottom=Math.min(rect1.bottom,rect2.bottom);var left=Math.max(rect1.left,rect2.left);var right=Math.min(rect1.right,rect2.right);var width=right-left;var height=bottom-top;return(width>=0&&height>=0)&&{top:top,bottom:bottom,left:left,right:right,width:width,height:height};}
function getBoundingClientRect(el){var rect;try{rect=el.getBoundingClientRect();}catch(err){}
if(!rect)return getEmptyRect();if(!(rect.width&&rect.height)){rect={top:rect.top,right:rect.right,bottom:rect.bottom,left:rect.left,width:rect.right-rect.left,height:rect.bottom-rect.top};}
return rect;}
function getEmptyRect(){return{top:0,bottom:0,left:0,right:0,width:0,height:0};}
function containsDeep(parent,child){var node=child;while(node){if(node==parent)return true;node=getParentNode(node);}
return false;}
function getParentNode(node){var parent=node.parentNode;if(parent&&parent.nodeType==11&&parent.host){return parent.host;}
if(parent&&parent.assignedSlot){return parent.assignedSlot.parentNode;}
return parent;}
window.IntersectionObserver=IntersectionObserver;window.IntersectionObserverEntry=IntersectionObserverEntry;}(window,document));
/*!
 * JavaScript Cookie v2.2.0
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
!function(e){var n=!1;if("function"==typeof define&&define.amd&&(define(e),n=!0),"object"==typeof exports&&(module.exports=e(),n=!0),!n){var o=window.Cookies,t=window.Cookies=e();t.noConflict=function(){return window.Cookies=o,t}}}(function(){function e(){for(var e=0,n={};e<arguments.length;e++){var o=arguments[e];for(var t in o)n[t]=o[t]}return n}return function n(o){function t(n,r,i){var c;if("undefined"!=typeof document){if(arguments.length>1){if("number"==typeof(i=e({path:"/"},t.defaults,i)).expires){var a=new Date;a.setMilliseconds(a.getMilliseconds()+864e5*i.expires),i.expires=a}i.expires=i.expires?i.expires.toUTCString():"";try{c=JSON.stringify(r),/^[\{\[]/.test(c)&&(r=c)}catch(e){}r=o.write?o.write(r,n):encodeURIComponent(String(r)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),n=(n=(n=encodeURIComponent(String(n))).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent)).replace(/[\(\)]/g,escape);var s="";for(var f in i)i[f]&&(s+="; "+f,!0!==i[f]&&(s+="="+i[f]));return document.cookie=n+"="+r+s}n||(c={});for(var p=document.cookie?document.cookie.split("; "):[],d=/(%[0-9A-Z]{2})+/g,u=0;u<p.length;u++){var l=p[u].split("="),C=l.slice(1).join("=");this.json||'"'!==C.charAt(0)||(C=C.slice(1,-1));try{var g=l[0].replace(d,decodeURIComponent);if(C=o.read?o.read(C,g):o(C,g)||C.replace(d,decodeURIComponent),this.json)try{C=JSON.parse(C)}catch(e){}if(n===g){c=C;break}n||(c[g]=C)}catch(e){}}return c}}return t.set=t,t.get=function(e){return t.call(t,e)},t.getJSON=function(){return t.apply({json:!0},[].slice.call(arguments))},t.defaults={},t.remove=function(n,o){t(n,"",e(o,{expires:-1}))},t.withConverter=n,t}(function(){})});
/* Polyfill service v3.16.0
 * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.
 *
 * UA detected: ie/11.0.0
 * Features requested: default
 *
 * - Array.from, License: CC0 (required by "default")
 * - Array.of, License: MIT (required by "default")
 * - Array.prototype.fill, License: CC0 (required by "default")
 * - Event, License: CC0 (required by "default", "CustomEvent", "Promise")
 * - CustomEvent, License: CC0 (required by "default")
 * - _DOMTokenList, License: CC0 (required by "DOMTokenList", "default")
 * - DOMTokenList, License: CC0 (required by "default")
 * - _mutation, License: CC0 (required by "Element.prototype.after", "default", "Element.prototype.append", "Element.prototype.before", "Element.prototype.prepend", "Element.prototype.remove", "Element.prototype.replaceWith")
 * - Element.prototype.after, License: CC0 (required by "default")
 * - Element.prototype.append, License: CC0 (required by "default")
 * - Element.prototype.before, License: CC0 (required by "default")
 * - Element.prototype.matches, License: CC0 (required by "default", "Element.prototype.closest")
 * - Element.prototype.closest, License: CC0 (required by "default")
 * - Element.prototype.prepend, License: CC0 (required by "default")
 * - Element.prototype.remove, License: CC0 (required by "default")
 * - Element.prototype.replaceWith, License: CC0 (required by "default")
 * - Symbol, License: MIT (required by "Map", "default", "Set", "Symbol.iterator", "Symbol.species")
 * - Symbol.iterator, License: MIT (required by "Map", "default", "Set")
 * - Symbol.species, License: MIT (required by "Map", "default", "Set")
 * - Number.isNaN, License: MIT (required by "default", "Map", "Set")
 * - Map, License: CC0 (required by "default")
 * - Node.prototype.contains, License: CC0 (required by "default")
 * - Object.assign, License: CC0 (required by "default")
 * - Promise, License: MIT (required by "default")
 * - Set, License: CC0 (required by "default")
 * - String.prototype.endsWith, License: CC0 (required by "default")
 * - String.prototype.includes, License: CC0 (required by "default")
 * - String.prototype.startsWith, License: CC0 (required by "default")
 * - URL, License: CC0 (required by "default") */



// Element.prototype.matches
Element.prototype.matches = Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || function matches(selector) {

	var element = this;
	var elements = (element.document || element.ownerDocument).querySelectorAll(selector);
	var index = 0;

	while (elements[index] && elements[index] !== element) {
		++index;
	}

	return !!elements[index];
};

// Element.prototype.closest
Element.prototype.closest = function closest(selector) {
	var node = this;

	while (node) {
		if (node.matches(selector)) return node;
		else node = node.parentElement;
	}

	return null;
};



/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */
"document"in self&&("classList"in document.createElement("_")&&(!document.createElementNS||"classList"in document.createElementNS("http://www.w3.org/2000/svg","g"))||function(a){if("Element"in a){a=a.Element.prototype;var h=Object,l=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},n=Array.prototype.indexOf||function(c){for(var b=0,k=this.length;b<k;b++)if(b in this&&this[b]===c)return b;return-1},f=function(c,b){this.name=c;this.code=DOMException[c];this.message=b},e=function(c,
b){if(""===b)throw new f("SYNTAX_ERR","The token must not be empty.");if(/\s/.test(b))throw new f("INVALID_CHARACTER_ERR","The token must not contain space characters.");return n.call(c,b)},g=function(c){var b=l.call(c.getAttribute("class")||"");b=b?b.split(/\s+/):[];for(var k=0,e=b.length;k<e;k++)this.push(b[k]);this._updateClassName=function(){c.setAttribute("class",this.toString())}},d=g.prototype=[],m=function(){return new g(this)};f.prototype=Error.prototype;d.item=function(c){return this[c]||
null};d.contains=function(c){return!~e(this,c+"")};d.add=function(){var c=arguments,b=0,k=c.length,d=!1;do{var a=c[b]+"";~e(this,a)&&(this.push(a),d=!0)}while(++b<k);d&&this._updateClassName()};d.remove=function(){var c=arguments,b=0,d=c.length,a=!1,f;do{var g=c[b]+"";for(f=e(this,g);~f;)this.splice(f,1),a=!0,f=e(this,g)}while(++b<d);a&&this._updateClassName()};d.toggle=function(c,b){var a=this.contains(c),d=a?!0!==b&&"remove":!1!==b&&"add";if(d)this[d](c);return!0===b||!1===b?b:!a};d.replace=function(c,
b){var a=e(c+"");~a&&(this.splice(a,1,b),this._updateClassName())};d.toString=function(){return this.join(" ")};if(h.defineProperty){d={get:m,enumerable:!0,configurable:!0};try{h.defineProperty(a,"classList",d)}catch(c){if(void 0===c.number||-2146823252===c.number)d.enumerable=!1,h.defineProperty(a,"classList",d)}}else h.prototype.__defineGetter__&&a.__defineGetter__("classList",m)}}(self),function(){var a=document.createElement("_");a.classList.add("c1","c2");if(!a.classList.contains("c2")){var h=
function(a){var f=DOMTokenList.prototype[a];DOMTokenList.prototype[a]=function(a){var e,d=arguments.length;for(e=0;e<d;e++)a=arguments[e],f.call(this,a)}};h("add");h("remove")}a.classList.toggle("c3",!1);if(a.classList.contains("c3")){var l=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(a,f){return 1 in arguments&&!this.contains(a)===!f?f:l.call(this,a)}}"replace"in document.createElement("_").classList||(DOMTokenList.prototype.replace=function(a,f){var e=this.toString().split(" "),
g=e.indexOf(a+"");~g&&(e=e.slice(g),this.remove.apply(this,e),this.add(f),this.add.apply(this,e.slice(1)))});a=null}());
/*! UTF-8

© kovrigin
Все права разрешены
красивый дизайн должен иметь красивый код®

https://github.com/htmlpluscss/

*/

var CF = {};

(function(){

	CF.body = document.body;
	CF.width = window.innerWidth;
	CF.height = window.innerHeight;

	CF.touchDevice = "ontouchstart" in document.documentElement;

// resize

	var resizeTimeout = null;

	window.addEventListener("resize", function(){

		if (!resizeTimeout) {

			resizeTimeout = setTimeout(function() {

				resizeTimeout = null;
				CF.width = window.innerWidth;
				CF.height = window.innerHeight;

			}, 100);

		}

	});

// href="tel:"

	if(!CF.touchDevice || CF.width > 1200) {

		Array.prototype.forEach.call(document.querySelectorAll('[href^="tel"]'), function (el) {

			el.removeAttribute('href');

		});

	}

// склонение
	CF.declension = function(num, expressions) {
		var r;
		var count = num % 100;
		if (count > 4 && count < 21)
			r = expressions['2'];
		else {
			count = count % 10;
			if (count == 1)
				r = expressions['0'];
			else if (count > 1 && count < 5)
				r = expressions['1'];
			else
				r = expressions['2'];
		}
		return r;
	}

// загрузка калькулятора
	if (document.querySelector('.calculator')) {

		var script = document.createElement('script');

		script.type = 'text/javascript';
		script.async = true;
		script.src = SITE_TEMPLATE_PATH + '/js/calculator.all.min.js';

		document.head.appendChild(script);

	}

	// обработчик анимаций
	CF.cssAnimation = function(a){var b,c,d=document.createElement("cssanimation");switch(a){case'animation':b={"animation":"animationend","OAnimation":"oAnimationEnd","MozAnimation":"animationend","WebkitAnimation":"webkitAnimationEnd"};break;case'transition':b={"transition":"transitionend","OTransition":"oTransitionEnd","MozTransition":"transitionend","WebkitTransition":"webkitTransitionEnd"}}for(c in b)if(d.style[c]!==undefined)return b[c]}

	// Determine if an element is in the visible viewport
	CF.isInViewport = function(element) {
		var rect = element.getBoundingClientRect();
		return (rect.top >= 0 && rect.bottom <= CF.height);
	}

})();
(function(cookie){

//	Cookies.set('BITRIX_SM_infoCookie', 'close');


})(document.querySelector('.cookie'));
(function(){

	function addLink() {

		var body_element = document.getElementsByTagName('body')[0];
		var selection = document.getSelection();
		var pagelink = "<p>Источник: <a href='"+location.href+"'>"+location.href+"</a></p>";
		var copytext = selection + pagelink;
		var newdiv = document.createElement('div');

		body_element.appendChild(newdiv);
		newdiv.innerHTML = copytext;
		selection.selectAllChildren(newdiv);

		window.setTimeout(function(){

			body_element.removeChild(newdiv);

		},0);

	}

	document.querySelector('.article') && (document.querySelector('.article').oncopy = addLink);

})();


(function(){

	var forms = document.querySelectorAll('.form');

	Array.prototype.forEach.call(forms, function(form){

		var novalidate = false,
			showMoadalOk = form.getAttribute('data-ok'),
			formRequired = form.querySelectorAll('[required]'),
			formBtnSubmit = form.querySelector('.form__submit');

		// отправка формы
		form.addEventListener('submit', function(e) {

			e.preventDefault();

			var novalidate = false,
				formData = new FormData(form);

			Array.prototype.forEach.call(formRequired, function(input){

				if(input.getAttribute('type') == 'checkbox') {

					if(input.checked){

						input.parentNode.classList.remove('checkbox--error');

					}
					else {

						input.parentNode.classList.add('checkbox--error');
						novalidate = true;

					}

				}

				else {

					if(input.classList.contains('input-label__input')){

						errorInputLabel(input);

					}

					if(!input.value){

						novalidate = true;

					}

				}

			});


			if(!novalidate){

				var xhr = new XMLHttpRequest();

				xhr.open("POST", form.getAttribute('action'));
				xhr.send(formData);

				// reset

				formBtnSubmit && formBtnSubmit.setAttribute('disabled','disabled');

				xhr.onreadystatechange = function() {

					if (xhr.readyState != 4){

						return;

					}

					if (xhr.status == 200) {

						form.reset();

						Array.prototype.forEach.call(inputLabel, function(el){

							focusInputLabel(el);

						});

						if(showMoadalOk) {

							CF.modalShow('ok',showMoadalOk.split('|')[0],showMoadalOk.split('|')[1]);

						}

					} else {

						alert('ошибка ' + xhr.status);

					}

					formBtnSubmit && formBtnSubmit.removeAttribute('disabled');

				}
			}
		});
	});


// input-label

	var inputLabel = document.querySelectorAll('.input-label__input');

	function focusInputLabel(el,required){

		el.value ?
			el.parentNode.classList.add('input-label--no-empty'):
			el.parentNode.classList.remove('input-label--no-empty');

		if(required && el.getAttribute('required') !== null) {

			errorInputLabel(el);

		}

	}

	function errorInputLabel(el){

		el.value ?
			el.parentNode.classList.remove('input-label--error'):
			el.parentNode.classList.add('input-label--error');

	}

	Array.prototype.forEach.call(inputLabel, function(el){

		el.addEventListener('focus', function() {

			focusInputLabel(el);

		});

		el.addEventListener('keyup', function() {

			focusInputLabel(el,true);

		});

		el.addEventListener('blur', function() {

			focusInputLabel(el,true);

		});

		focusInputLabel(el);

	});

// checked

	var checkbox = document.querySelectorAll('.checkbox');

	Array.prototype.forEach.call(checkbox, function(el){

		var input = el.querySelector('input');

		input.addEventListener('change', function() {

			if(input.checked) {

				el.classList.remove('checkbox--error');

			}

		});

	});

})();


(function(geo){

	if(geo) {

		var btnTrue = geo.querySelector('.header__geo-confirm-true'),
			confirmWindow = geo.querySelector('.header__geo-confirm');

		btnTrue.addEventListener('click', function () {

            var city = geo.querySelector('.header__geo-confirm-name'),
                current = geo.querySelector('.header__geo-current');

            current.textContent = city.textContent;

			confirmWindow.classList.add('hide');

            Cookies.set('BITRIX_SM_GEO_ACCEPT', 1, {domain: location.hostname});
		});

		if(!Cookies.get('BITRIX_SM_GEO_ACCEPT') || Cookies.get('BITRIX_SM_GEO_ACCEPT') === '0') {

			confirmWindow.classList.remove('hide');

		}

	}

})(document.querySelector('.header__geo'));
(function () {

	var yaCounterId = '51123644',
		goals = [
			// home
			{
				skipPages: ['/loans/ease/', '/loans/secured/', '/loans/ways/'],
				selector: '.callback',
				event: 'submit',
				yandex: {
					target: 'CallbackMain'
				},
				google: {
					category: 'Callback',
					action: 'submit',
					label: 'Main'
				}
			},
			{
				page: '/',
				selector: '.consultation',
				event: 'submit',
				yandex: {
					target: 'ConsultationMain'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'ConsultationMain'
				}
			},
			{
				page: '/',
				selector: '.promo__item--loan .btn',
				event: 'click',
				yandex: {
					target: 'DetailZaym'
				},
				google: {
					category: 'Button',
					action: 'click',
					label: 'DetailZaym'
				}
			},
			{
				page: '/',
				selector: '.promo__item--auto .btn',
				event: 'click',
				yandex: {
					target: 'DetailAuto'
				},
				google: {
					category: 'Button',
					action: 'click',
					label: 'DetailAuto'
				}

			},
			// loan (ease)
			{
				page: '/loans/ease/',
				selector: '.callback',
				event: 'submit',
				yandex: {
					target: 'ZaymCallback'
				},
				google: {
					category: 'Callback',
					action: 'submit',
					label: 'Zaym'
				}

			},
			{
				page: '/loans/ease/',
				selector: '.consultation',
				event: 'submit',
				yandex: {
					target: 'ConsultationZaym'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'ConsultationZaym'
				}

			},
			{
				page: '/loans/ease/',
				selector: '.calculator__form',
				event: 'submit',
				yandex: {
					target: 'ZaymForm'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'Zaym'
				}
			},

			// loan (auto)
			{
				page: '/loans/secured/',
				selector: '.callback',
				event: 'submit',
				yandex: {
					target: 'AutoCallback'
				},
				google: {
					category: 'Callback',
					action: 'submit',
					label: 'Auto'
				}
			},
			{
				page: '/loans/secured/',
				selector: '.consultation',
				event: 'submit',
				yandex: {
					target: 'ConsultationAuto'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'ConsultationAuto'
				}

			},
			{
				page: '/loans/secured/',
				selector: '.calculator__form',
				event: 'submit',
				yandex: {
					target: 'AutoForm'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'Auto'
				}

			},

			// ways
			{
				page: '/loans/ways/',
				selector: '.callback',
				event: 'submit',
				yandex: {
					target: 'HowCallback'
				},
				google: {
					category: 'Callback',
					action: 'submit',
					label: 'How'
				}
			},
			{
				page: '/loans/ways/',
				selector: '.ways__item:first-child .btn',
				event: 'click',
				yandex: {
					target: 'HowForm'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'How'
				}
			},

			// Получение денег
			{
				page: '/loans/secured/received/',
				selector: '.callback',
				event: 'submit',
				yandex: {
					target: 'GetCallback'
				},
				google: {
					category: 'Callback',
					action: 'submit',
					label: 'Get'
				}
			},
			{
				page: '/loans/secured/received/',
				selector: '.calculator__form',
				event: 'submit',
				yandex: {
					target: 'GetForm'
				},
				google: {
					category: 'Form',
					action: 'submit',
					label: 'Get'
				}
			},

			// Способы погашения
			{
				page: '/loans/repay/',
				selector: '.repay__item--elecsnet .btn',
				event: 'click',
				yandex: {
					target: 'Elecsnet'
				},
				google: {
					category: 'Button',
					action: 'click',
					label: 'Elecsnet'
				}
			},
			{
				page: '/loans/repay/',
				selector: '.repay__item--transfer .btn',
				event: 'click',
				yandex: {
					target: 'Transfer'
				},
				google: {
					category: 'Button',
					action: 'click',
					label: 'Transfer'
				}
			},
			{
				page: '/loans/repay/',
				selector: '.repay__item--bank .btn',
				event: 'click',
				yandex: {
					target: 'Bank'
				},
				google: {
					category: 'Button',
					action: 'click',
					label: 'Bank'
				}
			},
		];

	goals.forEach(function (goal) {
		if (goal.page && goal.page !== location.pathname)
			return;

		if (goal.skipPages && goal.skipPages.indexOf(location.pathname) !== -1)
			return;

		var elements = document.querySelectorAll(goal.selector);

		[].forEach.call(elements, function (element) {
			element.addEventListener(goal.event, function () {
				if (goal.yandex && window['yaCounter' + yaCounterId]) {
					window['yaCounter' + yaCounterId].reachGoal(goal.yandex.target);
				}

				if (goal.google && window.gtag) {
					gtag('event', goal.google.action, {
						event_category: goal.google.category,
						event_label: goal.google.label
					});
				}
			});
		});
	});

})();
(function () {
    var Search = function (selector) {
        this.container = document.querySelector(selector);

        if (!this.container)
            return;

        this.action = this.container.getAttribute('action');

        this.input = this.container.querySelector('.header__search-input');
        this.btn = this.container.querySelector('.header__search-btn');
        this.result = this.container.querySelector('.header__search-result');

        this.init();
    };

    Search.prototype = {
        oldValue: '',
        run: false,
        minQueryLen: 2,
        cache: [],

        init: function () {
            var that = this;

            this.oldValue = this.input.value;

            this.btn.addEventListener('click', function () {
                that.open();
            });

            window.addEventListener('click', function (e) {
                if (!e.target.closest('.header__search')) {
                    that.close();
                }
            });

            this.input.addEventListener('keydown', function (e) {
                if (e.keyCode === 27) {
                    that.close();
                    return;
                }
            });

            this.input.addEventListener('focus', function () {
                if (that.result.innerHTML.length > 0)
                    that.showResult();
            });

            var timeout = 0;
            this.input.addEventListener('input', function () {
                if (timeout)
                    clearTimeout(timeout);

                if (that.input.value.length === 0) {
                    that.hideResult();
                    return;
                }

                timeout = setTimeout(function () {
                    that.search(that.input.value);
                }, 500);
            });
        },

        open: function () {
            var that = this;

            this.container.classList.toggle('header__search--show');

            setTimeout(function () {
                if(that.container.classList.contains('header__search--show')){
                    that.input.focus();
                }
                else {
                    document.body.classList.remove('body--bg');
                }
            }, 100);
        },

        close: function () {
            this.input.value = '';
            this.container.classList.remove('header__search--show');
            document.body.classList.remove('body--bg');
            this.hideResult();
        },

        showResult: function (result) {
            this.result.innerHTML = result || '';
            this.result.classList.remove('hide');
        },

        hideResult: function () {
            this.result.innerHTML = '';
            this.result.classList.add('hide');
        },

        search: function (value) {
            var that = this;

            if (this.run)
                return;

            if (value === this.oldValue)
                return;

            if (value.length <= this.minQueryLen)
                return;

            if (this.input.value in this.cache) {
                this.showResult(this.cache[this.input.value]);
            } else {
                this.run = true;

                this.loadResults(this.input.value).then(function (result) {
                    that.cache[that.input.value] = result;
                    that.showResult(result);
                    that.run = false;
                });
            }
        },

        loadResults: function (search) {
            var that = this;

            function formatParams(params) {
                return Object
                    .keys(params)
                    .map(function (key) {
                        return key + '=' + encodeURIComponent(params[key])
                    })
                    .join('&')
            }

            return new Promise(function (resolve, reject) {
                var xhr = new XMLHttpRequest();

                xhr.open('GET', that.action + '?' + formatParams({
                    'ajax_call': 'y',
                    'INPUT_ID': that.input.id,
                    'q': search,
                    'l': that.minQueryLen
                }));

                xhr.send();

                xhr.onload = function () {
                    if (this.status >= 200 && this.status < 300) {
                        resolve(xhr.response);
                    } else {
                        reject({
                            status: this.status,
                            statusText: this.statusText
                        });
                    }
                };

                xhr.onerror = function () {
                    reject({
                        status: this.status,
                        statusText: this.statusText
                    });
                };
            });
        }
    };

    new Search('.header__search');
})();
CF.loadMap = function (callback) {
    if (typeof ymaps === 'undefined') {
        var script = document.createElement('script');

        script.type = 'text/javascript';
        script.async = true;
        script.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU';

        script.onload = function () {
            ymaps.ready(callback);
        };

        document.head.appendChild(script);
    } else {
        ymaps.ready(callback);
    }
};

(function(elems){

	Array.prototype.forEach.call(elems, function (el) {

		var btn = el.querySelector('.map-toggle__btn'),
			box = el.querySelector('.map-toggle__box');

		btn.addEventListener('click', function () {

			if(box.clientHeight > 0) {

				box.style.height = box.clientHeight + 'px';

			}

			setTimeout(function(){

				el.classList.toggle('map-toggle--hide');

			},100);

		});

	});

})(document.querySelectorAll('.map-toggle'));
CF.mask = function(elems){

	if(!elems.length) {

		return;

	}

	if (typeof Inputmask === 'undefined') {

		var script = document.createElement('script');

		script.type = 'text/javascript';
		script.async = true;
		script.src = SITE_TEMPLATE_PATH + '/js/inputmask.all.min.js';

		script.onload = function () {

			Inputmask.extendDefaults({
				oncomplete: function () {
					/*console.log('complete');*/
					this.classList.add('inputmask--complete');
				},
				onincomplete: function () {
					/*console.log('incomplete');*/
					this.classList.remove('inputmask--complete');
				},
				oncleared: function () {
					/*console.log('cleared');*/
				},
				onKeyValidation: function(key, result){
					/*console.log(key, result);*/
				}
			});

			setMask();

		};

		setTimeout(function(){

			document.head.appendChild(script);

		}, 5000);

	} else {

		setMask();

	}

	function setMask() {

		Array.prototype.forEach.call(elems, function(el){

			if(el.classList.contains('inputmask--phone')) {

				var maskInput = new Inputmask({
					mask: "+7 (999) 999-99-99",
					showMaskOnHover: false,
					placeholder: "+7 (___) ___-__-__"
				});

			}
			else if(el.classList.contains('inputmask--date')) {

				var maskInput = new Inputmask({
					alias: "datetime",
					showMaskOnHover: false,
					inputFormat: "dd.mm.yyyy",
					placeholder: "дд.мм.гггг"
				});

			}
			else if(el.classList.contains('inputmask--currency')) {

				var maskInput = new Inputmask({
					alias: "integer",
					suffix: ' рублей',
					groupSize: 3,
					autoGroup: true,
					groupSeparator: ' ',
					rightAlign: false
				});

			}
			else {

				var maskInput = new Inputmask(el.getAttribute('data-mask'));

			}

			maskInput.mask(el);

		});

	}

};

CF.mask(document.querySelectorAll('.inputmask'));
// btn all menu

CF.videoToggle = function(metod){

	var video = document.querySelectorAll('video');

	if(video.length) {

		Array.prototype.forEach.call(video, function (el) {

			metod == 'play' ? el.play() : el.pause();

		});

	}

};

(function(btnFullMenu){

	if(!btnFullMenu) {

		return;

	}

	btnFullMenu.addEventListener('click', function () {

		CF.videoToggle('stop');

		btnFullMenu.parentNode.classList.toggle('header__nav--show');

	});

	window.addEventListener("click", function(e){

		if(!e.target.closest('.header__nav') || e.target.closest('.header__search')){

			CF.videoToggle('play');
			btnFullMenu.parentNode.classList.remove('header__nav--show');

		}

	});

})(document.querySelector('.header__btn-full-menu'));

// bg
(function(search){

	if(!search) {

		return;

	}

	var menu = document.querySelector('.header__btn-full-menu').parentNode;

	window.addEventListener("click", function(e){

		if(menu.classList.contains('header__nav--show') || search.classList.contains('header__search--show')) {

			CF.videoToggle('stop');
			CF.body.classList.add('body--bg');

		}
		else {

			CF.videoToggle('play');

		}

	});

})(document.querySelector('.header__search'));


// menu mobile
(function(btn){

	if(!btn) {

		return;

	}

	btn.addEventListener('click', function () {

		if(CF.OpenMenu) {

			CF.body.classList.remove('menu-show');

			window.scrollTo(0,CF.windowScrollOld);

			CF.OpenMenu = false;

		}
		else {

			CF.OpenMenu = true;

			// записываем значение скролла страницы
			CF.windowScrollOld = window.pageYOffset;
			window.scrollTo(0,0);

			CF.body.classList.add('menu-show');

		}

	});

})(document.querySelector('.header__btn-menu-toggle'));

(function(){

	var modal = document.querySelectorAll('.modal'),
		box = document.querySelectorAll('.modal__box'),
		items = document.querySelectorAll('.modal__item'),
		wrapper = document.querySelector('.wrapper'),
		videoBox = document.getElementById('modal-video'),
		activeItem = null;

	// клик по фону или кнопкам закрыть
	Array.prototype.forEach.call(modal, function (el) {

		el.addEventListener('click', function (e) {

			if(e.target.classList.contains('modal') || e.target.classList.contains('modal__close')){

				CF.hideModal();

			}

		});

	});

	CF.hideModal = function() {

		CF.videoToggle('play');

		Array.prototype.forEach.call(modal, function (el) {

			el.classList.add('hidden-visible');

		});

		CF.body.classList.remove('modal-show');
		wrapper.style.top = 0;
		window.scrollTo(0,CF.windowScrollOld);

		activeItem = false;

		// clear video
		if (videoBox){

			videoBox.innerHTML = '';

		}

	};

	CF.modalShow = function (selector,title,text) {

		CF.videoToggle('stop');

		// если модальные окна не показаны
        if (!activeItem) {

			CF.windowScrollOld = window.pageYOffset;

			wrapper.style.top = -CF.windowScrollOld + 'px';

		}

        activeItem = null;

		// ищем активное окно и его бокс
		Array.prototype.forEach.call(items, function(el){

			if(el.classList.contains('modal__item--' + selector)) {

				el.classList.remove('hidden-visible');

				activeItem = el;

			}
			else {

				el.classList.add('hidden-visible');

			}

		});

        if (!activeItem) {
            console.warn('Modal "%s" not found', selector);
			return;
        }

        if (selector === 'ok') {

			if(!title) {

				title = '';

			}

			if(!text) {

				text = '';

			}

			activeItem.querySelector('.modal__title').innerHTML = title;
			activeItem.querySelector('.modal__text').innerHTML = text;

		}

		// скрываем все боксы
		Array.prototype.forEach.call(modal, function (el) {

			el.classList.add('hidden-visible');

		});

		Array.prototype.forEach.call(box, function (el) {

			el.classList.add('hidden-visible');

		});

		// показывыем активный бокс
		activeItem.closest('.modal').classList.remove('hidden-visible');
		activeItem.closest('.modal__box').classList.remove('hidden-visible');

		CF.body.classList.add('modal-show');
		window.scrollTo(0,0);

		// close menu
		if(CF.OpenMenu){

			CF.body.classList.remove('menu-show');
			CF.OpenMenu = false;

		}

		activeItem.focus();

		// вызывыем событие на активном окне
		if (typeof window.CustomEvent === 'function') {

			activeItem.dispatchEvent(new Event('modalShow'));

		}

	};

	// слушаем источник клика
	document.addEventListener('click', function (e) {

		var target = e.target;

		while (target !== this) {

			if (target.hasAttribute('data-modal')) {

				CF.modalShow(target.getAttribute('data-modal'));

			}

			target = target.parentNode;

		}

	});

})();

(function(elems){

	Array.prototype.forEach.call(elems, function (el) {

		var form = el.querySelector('.office-select__form'),
			input = el.querySelector('.office-select__input'),
			reset = el.querySelector('.office-select__reset');

		input.addEventListener('keyup', function () {

			reset.classList.toggle('hide', input.value.length < 4);

		});

		form.addEventListener('reset', function () {

			reset.classList.add('hide');
			input.value = '';

		});

	});

	// слушаем источник клика
	document.addEventListener('click', function (e) {

		var target = e.target;

		while (target !== this) {

			if (target.classList.contains('office-select__btn-toggle-rasp')) {

				var tableBox = target.parentNode.querySelector('.office-select__rasp'),
					height = tableBox.querySelector('table').clientHeight;

				if(tableBox.clientHeight > 0){

					height = 0;

				}

				tableBox.style.height = height + 'px';

			}

			target = target.parentNode;

		}

	});


})(document.querySelectorAll('.office-select'));

(function(modalPoll){

	if(modalPoll.length) {

		Array.prototype.forEach.call(modalPoll, function (el) {

			var radio = el.querySelectorAll('.modal-poll__radio input'),
				inputText = el.querySelector('.modal-poll__input-custom'),
				btn = el.querySelector('.modal__btn');

			function inputTextEvent(){

				btn.disabled = !inputText.value;

			}

			inputText.addEventListener('change', function() {

				inputTextEvent();

			});

			inputText.addEventListener('keyup', function() {

				inputTextEvent();

			});

			inputText.addEventListener('blur', function() {

				inputTextEvent();

			});

			Array.prototype.forEach.call(radio, function (elem) {

				elem.addEventListener('change', function () {

					btn.disabled = false;

					if (this.value === 'custom') {

						inputText.classList.remove('hide');
						inputText.disabled = false;
						inputText.focus();

						inputTextEvent();

					} else {

						inputText.classList.add('hide');
						inputText.disabled = true;

					}

				});

			});


		});

	}

})(document.querySelectorAll('.modal-poll'));
/** Этот код в продакшене больше не используется

(function(elems){

	Array.prototype.forEach.call(elems, function(timer){

		var clearIntervalID = null,
			formRepeat = timer.querySelector('.modal-timer__form'),
			btnRepeat = timer.querySelector('.modal-timer__submit'),
			timerText = timer.querySelector('.modal-timer__text'),
			timerValue = timer.querySelector('.modal-timer__value'),
			timerStart = parseInt(timerValue.getAttribute('data-time')),
			suf = timerValue.getAttribute('data-suf').split(',');

		function setup(){

			var count = timerStart;

			timerValue.textContent = count + ' ' + CF.declension(count,suf);
			timerText.classList.remove('hide');
			btnRepeat.classList.add('hide');

			clearInterval(clearIntervalID);

			clearIntervalID = setInterval(function(){

				if(count < 1) {

					clearInterval(clearIntervalID);

					timerText.classList.add('hide');
					btnRepeat.classList.remove('hide');

				}

				count--;
				timerValue.textContent = count + ' ' + CF.declension(count,suf);

			}, 1000);

		}

		timer.addEventListener('modalShow', function () {

			setup();

		});

		btnRepeat.addEventListener('click', function () {

			var xhr = new XMLHttpRequest(),
				formData = new FormData(formRepeat);

			xhr.open("GET", formRepeat.getAttribute('action'));

			setup();

			xhr.onreadystatechange = function() {

				if (xhr.readyState === 4) {

					console.log('запрос на новый код успешно отправлен.');

				}

				if (xhr.status !== 200) {

					console.log('ошибка ' + xhr.status);

				}

			}

			xhr.send(formData);

		});

	});

})(document.querySelectorAll('.modal-timer'));*/
(function(content){

	if(!content) {

		return;

	}

	var videos = content.querySelectorAll('[data-youtube]');

	if(videos.length) {

		Array.prototype.forEach.call(videos, function (video) {

			var id = video.getAttribute('data-youtube');

			video.addEventListener('click', function (e) {

				e.preventDefault();

				var iframe = document.createElement('iframe');

				iframe.setAttribute('allowfullscreen', '');
				iframe.setAttribute('allow', 'autoplay');
				iframe.setAttribute('src', 'https://www.youtube.com/embed/' + id + '?rel=0&showinfo=0&autoplay=1');

				video.appendChild(iframe);
				video.classList.add('youtube-iframe');

			});

		});

	}

})(document.querySelector('.article__content'));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
